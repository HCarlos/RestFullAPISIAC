# Generated by Django 4.1 on 2024-09-25 18:19

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'Usuario', 'verbose_name_plural': 'Usuarios'},
        ),
        migrations.AddField(
            model_name='user',
            name='avatar',
            field=models.ImageField(blank=True, null=True, upload_to='profile/'),
        ),
        migrations.AddField(
            model_name='user',
            name='avatar_datetime',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='bio',
            field=models.TextField(blank=True, verbose_name='Biografía'),
        ),
        migrations.AddField(
            model_name='user',
            name='curp',
            field=models.CharField(blank=True, help_text='Se refiere a la CURP aplicada en México', max_length=18, verbose_name='CURP'),
        ),
        migrations.AddField(
            model_name='user',
            name='domicilio',
            field=models.TextField(blank=True, verbose_name='Domicilio'),
        ),
        migrations.AddField(
            model_name='user',
            name='estatus',
            field=models.SmallIntegerField(blank=True, choices=[(1, 'Activo'), (0, 'Inactivo')], default=1, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='facebook',
            field=models.CharField(blank=True, max_length=150, verbose_name='Facebook'),
        ),
        migrations.AddField(
            model_name='user',
            name='fecha_nacimiento',
            field=models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Nacimiento'),
        ),
        migrations.AddField(
            model_name='user',
            name='folllowin',
            field=models.IntegerField(default=0, help_text='Siguendo', verbose_name='Followin'),
        ),
        migrations.AddField(
            model_name='user',
            name='follower',
            field=models.IntegerField(default=0, help_text='Segudores', verbose_name='Followers'),
        ),
        migrations.AddField(
            model_name='user',
            name='genero',
            field=models.SmallIntegerField(blank=True, choices=[(1, 'Masculino'), (0, 'Femenino')], default=1, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='github',
            field=models.CharField(blank=True, max_length=150, verbose_name='GitHub'),
        ),
        migrations.AddField(
            model_name='user',
            name='instagram',
            field=models.CharField(blank=True, max_length=150, verbose_name='Instagram'),
        ),
        migrations.AddField(
            model_name='user',
            name='linkedin',
            field=models.CharField(blank=True, max_length=150, verbose_name='LinkedIn'),
        ),
        migrations.AddField(
            model_name='user',
            name='name',
            field=models.CharField(blank=True, max_length=150, verbose_name='Nombre'),
        ),
        migrations.AddField(
            model_name='user',
            name='post',
            field=models.IntegerField(default=0, help_text='Elementos posteados', verbose_name='Post'),
        ),
        migrations.AddField(
            model_name='user',
            name='rfc',
            field=models.CharField(blank=True, help_text='Se refiere al RFC aplicada por el SAT en México', max_length=13, verbose_name='RFC'),
        ),
        migrations.AddField(
            model_name='user',
            name='session',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='twitter',
            field=models.CharField(blank=True, max_length=150, verbose_name='X'),
        ),
        migrations.AlterField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Creado el'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(error_messages={'unique': 'Un usuario con esa cuenta de email, ya existe.'}, help_text='Requerido. Se requiere este dato. Máximo 150 caracteres. Letras, números y @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Cuenta de Email'),
        ),
        migrations.AlterField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='Nombre'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece este usuario. Un usuario obtendrá todos los permisos. Otorgada a cada uno de sus grupos.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='Grupos'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designa si este usuario debe ser tratado como activo. Deseleccione esto en lugar de eliminar cuentas.', verbose_name='Esta activo'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designa si el usuario puede iniciar sesión en este sitio de administración.', verbose_name='Es Staff'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designa que este usuario no tiene todos los permisos.asignándolos explícitamente.', verbose_name='Estatus Superuser'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='Apellidos'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Permisos específicos para este usuario.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='Permisos de Usuario'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'Un usuario con ese username, ya existe.'}, help_text='Requerido. Máximo 150 caracteres. Letras, números y @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Nombre de Usuario'),
        ),
    ]
